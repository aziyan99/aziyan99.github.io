<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Aziyan99</title><link>https://aziyan99.github.io/tags/database/</link><description>Recent content in Database on Aziyan99</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>rajaazian08@gmail.com (Raja Azian)</managingEditor><webMaster>rajaazian08@gmail.com (Raja Azian)</webMaster><copyright>2022 Raja Azian All rights reserved</copyright><lastBuildDate>Mon, 12 Sep 2022 16:55:21 +0700</lastBuildDate><atom:link href="https://aziyan99.github.io/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Backup Mysql/MariaDB Database</title><link>https://aziyan99.github.io/posts/backup-mysql-database/</link><pubDate>Mon, 12 Sep 2022 16:55:21 +0700</pubDate><author>rajaazian08@gmail.com (Raja Azian)</author><guid>https://aziyan99.github.io/posts/backup-mysql-database/</guid><description>Membackup dan merestrore database (MySQl dan MariaDB) pada dasarnya sangat mudah dilakukan dengan memanfaatkan perintah mysqldump, hanya dengan satu perintah kita bisa membackup dan merestore database</description></item><item><title>MariaDB/MySQL: Menggunakan General Log</title><link>https://aziyan99.github.io/posts/mariadb-mysql-general-log/</link><pubDate>Fri, 01 Apr 2022 21:29:54 +0700</pubDate><author>rajaazian08@gmail.com (Raja Azian)</author><guid>https://aziyan99.github.io/posts/mariadb-mysql-general-log/</guid><description>Sebagai seorang programmer yang keren (pastinya), log adalah salah satu dari sekian banyak teman baik debugging kita. Melihat riwayat dari query-query yang dieksekusi oleh MariaDB juga akan menjadi informasi yang penting ketika kita mau menelusuri bagaimana tahapan eksekusi penyimpanan data dari aplikasi kita. MariaDB punya variable general_log dimana ketika kita ubah nilainya menjadi 1 MariaDB akan me-log suluruh history eksekusi query kedalama file. File tersebut biasanya disimpan di /usr/local/var/mysql.
Mengaktifkan General Log Login kedalam console MariaDB:</description></item><item><title>Laravel: Database Transaction</title><link>https://aziyan99.github.io/posts/laravel-database-transaction/</link><pubDate>Tue, 08 Feb 2022 21:29:54 +0700</pubDate><author>rajaazian08@gmail.com (Raja Azian)</author><guid>https://aziyan99.github.io/posts/laravel-database-transaction/</guid><description>Database trasaction sangat berguna ketika kita bermain dengan database karena ketika terjadi kesalahan atau error ketika mengeksekusi perintah yang berkaitan dengan database, semua transaksi yang terjadi sebelumnya akan dibatalkan sehingag database tidak akan terganggu atau cacat. Penggunaan pada laravel sangat mudah dengan library yang sudah laravel sediakan jadi kita tidak perlu lagi menulis transaksi secara manual menggunakan SQL.
Contoh DB::transaction(function() { // database operation goes here }); Selesai!!!</description></item><item><title>Laravel: Select data diantara dua tanggal</title><link>https://aziyan99.github.io/posts/laravel-select-between-date/</link><pubDate>Sun, 06 Feb 2022 21:29:54 +0700</pubDate><author>rajaazian08@gmail.com (Raja Azian)</author><guid>https://aziyan99.github.io/posts/laravel-select-between-date/</guid><description>Mengambil data dari database berdasarkan range tanggal (tanggal awal dan tanggal akhir) di laravel mudah dilakukan dengan bantuan Eloquent dari laravel (Model). Pengambilan data ini sangat membantu ketika kita ingin membuat laporan dari data atau kebutuhan lainnya yang membutuhkan pengguna bisa mengambil data berdasarkan tanggal.
Cara pertama (whereBetween) &amp;lt;?php namespace App\Http\Controllers; use Illuminate\Http\Request; use App\Models\User; use Carbon\Carbon; class UserController extends Controller { /** * Display a listing of the resource. * * @return \Illuminate\Http\Response */ public function index(Request $request) { $startDate = Carbon::createFromFormat(&amp;#39;d/m/Y&amp;#39;, &amp;#39;01/01/2021&amp;#39;); $endDate = Carbon::createFromFormat(&amp;#39;d/m/Y&amp;#39;, &amp;#39;06/01/2021&amp;#39;); $users = User::select(&amp;#39;id&amp;#39;, &amp;#39;name&amp;#39;, &amp;#39;email&amp;#39;, &amp;#39;created_at&amp;#39;) -&amp;gt;whereBetween(&amp;#39;created_at&amp;#39;, [$startDate, $endDate]) -&amp;gt;get(); dd($users); } } Cara kedua (where) Navigasi ke folder /var/www/html/ kemudian buat 2 folder baru atau bisa dengan perintah</description></item></channel></rss>